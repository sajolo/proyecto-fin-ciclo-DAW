@model Biblioteca.Models.Libro

@{
    ViewData["Title"] = "Eliminar Libro";
}

<h1>Eliminar Libro</h1>

<h4>@Model.Titulo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EliminarLibro">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="Autor" class="control-label"></label>
                <input asp-for="Autor" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="AnhoPublicacion" class="control-label"></label>
                <input asp-for="AnhoPublicacion" class="form-control" readonly />
            </div>
            <div class="form-group form-check m-2">
                <input class="form-check-input" asp-for="Prestado" disabled style="margin-top: 0.3rem;" />
                <label class="form-check-label ml-4" for="@Html.IdFor(model => model.Prestado)">
                    @Html.DisplayNameFor(model => model.Prestado)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Eliminar" class="btn btn-danger" />
                <a asp-action="ListaLibros" class="btn btn-secondary ml-2">Volver a la lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
